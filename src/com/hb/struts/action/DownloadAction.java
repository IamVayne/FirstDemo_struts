/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hb.struts.action;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.PageContext;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.hb.domain.User;
import com.hb.services.UserService;

/** 
 * MyEclipse Struts
 * Creation date: 05-31-2016
 * 
 * XDoclet definition:
 * @struts.action
 */
public class DownloadAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String usernameString = request.getParameter("username");
		UserService userService = new UserService();
		
		User user = userService.getUser(usernameString);
		
		try {
			String filenameString = java.net.URLEncoder.encode(user.getGoalfilename(), "utf-8");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		//设置响应头，告诉浏览器有文件下载。
		response.setContentType("text/html;charset=utf-8");
		try {
			response.setHeader("Content-Disposition", "attachment;filename="+java.net.URLEncoder.encode(user.getSourcefilename(), "utf-8"));
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		//先获取文件的绝对路径
		String filePath = this.getServlet().getServletContext().getRealPath("/picture");
		String fileAllPath = filePath+"\\"+user.getGoalfilename();
		
		System.out.println(fileAllPath);
		
		FileInputStream fin = null;
		OutputStream out = null;
		byte[] bytes = new byte[1024];
		int len = 0;
		try {
			fin = new FileInputStream(fileAllPath);
			out = response.getOutputStream();
			
			while((len=fin.read(bytes))>0){
				
				out.write(bytes, 0, len);
				
			}
			
			out.flush();
		} catch (Exception e) {
			// TODO: handle exception
		}finally{
			try {
				fin.close();
				out.close();
			} catch (IOException e) {
				
			}
		}
		
		return null;
	}
}